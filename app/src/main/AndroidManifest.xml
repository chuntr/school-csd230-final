<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">
    <uses-feature android:name="android.hardware.camera" />
    <uses-feature android:name="android.hardware.camera.autofocus" android:required="false" />
    <uses-feature android:name="android.hardware.camera.any" />
    <uses-permission android:name="android.permission.CAMERA" />
    <!-- <uses-permission android:name="android.permission.RECORD_AUDIO" /> -->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"
        android:maxSdkVersion="28" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />

    <application android:icon="@drawable/ic_launcher_camera"
        android:label="@string/camera_label"
        android:taskAffinity="">
        <service android:name="UploadService" android:process="android.process.media" />
        <receiver android:name="CameraButtonIntentReceiver"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.CAMERA_BUTTON"/>
            </intent-filter>
        </receiver>

        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

    -   <activity
            android:name=".ResultsActivity"
            android:exported="false"
            android:label="@string/title_activity_results"
            android:theme="@style/Theme.DistrubutingData.NoActionBar" />

        <activity
            android:name="Camera"
            android:configChanges="orientation|keyboardHidden"
            android:screenOrientation="landscape"
            android:clearTaskOnLaunch="true"
            android:taskAffinity="android.task.camera"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.media.action.IMAGE_CAPTURE" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.media.action.STILL_IMAGE_CAMERA" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>

        <activity
            android:name="GalleryPicker" android:label="@string/gallery_picker_label"
            android:configChanges="orientation|keyboardHidden"
            android:icon="@drawable/ic_launcher_gallery"
            android:clearTaskOnLaunch="true"
            android:taskAffinity="android.task.pictures">
        </activity>

        <activity
            android:name="ImageGallery" android:label="@string/gallery_label"
            android:configChanges="orientation|keyboardHidden"
            android:icon="@drawable/ic_launcher_gallery">
        </activity>

        <activity
            android:name="CropImage"
            android:process=":CropImage"
            android:configChanges="orientation|keyboardHidden"
            android:label="@string/crop_label">
        </activity>

        <activity
            android:name="ReviewImage"
            android:label="@string/view_label"
            android:screenOrientation="behind"
            android:configChanges="orientation|keyboardHidden"
            android:exported="true">
        </activity>

        <activity android:name=".DeleteImage"
            android:label="@string/delete_images_message">
        </activity>

        <!-- We configure a widget by asking to pick a photo, then crop it, and store the config internally -->
        <activity android:name="PhotoAppWidgetConfigure"></activity>
        <!-- We also allow direct binding where the caller provides a bitmap and
             appWidgetId to bind.  We require the permission because this changes our
             internal database without user confirmation. -->
        <activity android:name="PhotoAppWidgetBind" android:exported="true"
            android:theme="@android:style/Theme.NoDisplay"
            android:permission="android.permission.BIND_APPWIDGET">
        </activity>
    </application>

</manifest>